// SPDX-License-Identifier: MIT
pragma solidity >= 0.7.0;

import {IPoolManager} from '../../pkgs/v4-core/src/interfaces/IPoolManager.sol';
import {IV4Router} from '../../pkgs/v4-periphery/src/interfaces/IV4Router.sol';

library V4RouterDeployer {
    function deploy(address poolManagerAddress) internal returns (IV4Router router) {
        IPoolManager poolManager = IPoolManager(poolManagerAddress);
        bytes memory args = abi.encode(poolManager);
        bytes memory initcode_ = abi.encodePacked(initcode(), args);

        assembly {
            router := create(0, add(initcode_, 32), mload(initcode_))
        }
    }

    /// @dev autogenerated - run `` to generate current initcode
    function initcode() internal pure returns (bytes memory) {
        return hex'';
    }
}
