// SPDX-License-Identifier: MIT
pragma solidity >= 0.5.0;

import {IUniswapV2Factory} from '../../pkgs/v2-core/contracts/interfaces/IUniswapV2Factory.sol';

library UniswapV2FactoryDeployer {
    function deploy(address feeToSetter) internal returns (IUniswapV2Factory factory) {
        bytes memory args = abi.encode(feeToSetter);
        bytes memory initcode_ = abi.encodePacked(initcode(), args);
        assembly {
            factory := create(0, add(initcode_, 32), mload(initcode_))
        }
    }

    /// @dev autogenerated - run `` to generate current initcode
    function initcode() internal pure returns (bytes memory) {
        return hex'abc123';
    }
}
